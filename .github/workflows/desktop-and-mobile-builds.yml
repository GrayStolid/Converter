name: Desktop and Mobile Builds (Linux, macOS, Windows, AAB, APK, IPA)

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - main

  # Runs on pull request events that target one of the below branches
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0

  # Python version to use
  PYTHON_VERSION: 3.12.8
  
  # flet-cli version to install for `flet build`
  FLET_CLI_VERSION: 0.28.3
  
  # Ensures Python uses UTF-8 encoding by default
  PYTHONUTF8: 1
  
  # Disables rich text formatting in Flet CLI output
  FLET_CLI_NO_RICH_OUTPUT: 1
  
  # Disables progress bars when using UV
  UV_NO_PROGRESS: 1

  # Project Name
  PROJECT_NAME: SendLocation

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION

    - name: Patch for linux build
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev

    - name: Flet Build Linux
      run: |
        flet build linux --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Compress Linux artifact
      run: zip -r linux.zip build/linux

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ env.PROJECT_NAME }}_Linux_V${{ env.BUILD_VERSION }}
        path: linux.zip
        if-no-files-found: warn
        overwrite: false

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION

    - name: Flet Build macOS
      run: |
        flet build macos --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Compress macOS artifact
      run: zip -r macOS.zip build/macos/${{ github.repository }}.app
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ env.PROJECT_NAME }}_macOS_V${{ env.BUILD_VERSION }}
        path: macOS.zip
        if-no-files-found: warn
        overwrite: false
        
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$env:FLET_CLI_VERSION

    - name: Flet Build Windows
      run: |
        flet build windows --verbose --no-rich-output --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION

    - name: Compress Windows artifact
      run: Compress-Archive -Path build/windows/${{ github.repository }}.exe -DestinationPath windows.zip
      shell: pwsh
      
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ env.PROJECT_NAME }}_Windows_V${{ env.BUILD_VERSION }}
        path: windows.zip
        if-no-files-found: warn
        overwrite: false

  build-aab:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION

    - name: Flet Build AAB
      run: |
        flet build aab --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Compress AAB artifact
      run: zip -r aab.zip build/aab/release.aab
      
    - name: Upload AAB Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ env.PROJECT_NAME }}_AAB_V${{ env.BUILD_VERSION }}
        path: aab.zip
        if-no-files-found: warn
        overwrite: false

  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION

    - name: Flet Build APK
      run: |
        flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Compress APK artifact
      run: zip -r apk.zip build/apk/release.apk
      
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ env.PROJECT_NAME }}_APK_V${{ env.BUILD_VERSION }}
        path: apk.zip
        if-no-files-found: warn
        overwrite: false

  build-ipa:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION

    - name: Flet Build IPA
      run: |
        flet build ipa --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Compress IPA artifact
      run: zip -r ipa.zip build/ipa/${{ github.repository }}.ipa

    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ env.PROJECT_NAME }}_IPA_V${{ env.BUILD_VERSION }}
        path: ipa.zip
        if-no-files-found: warn
        overwrite: false
